name: Copilot Setup Steps
on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual setup'
        required: false
        default: 'Manual Copilot session setup'

jobs:
  setup-copilot-environment:
    name: Setup Copilot Build Environment
    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Cache APT Packages
        uses: actions/cache@v4
        id: apt-cache
        with:
          path: |
            /var/cache/apt/archives
            /var/lib/apt/lists
          key: ${{ runner.os }}-apt-${{ hashFiles('.github/scripts/.Aptfile') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install Prerequisites
        run: |
          : Install Prerequisites
          echo "::group::Install zsh and fix package manager"
          
          # Fix any interrupted package installations
          sudo dpkg --configure -a || true
          
          # Install zsh (required for build scripts)
          sudo apt-get update -qq
          sudo apt-get install -y zsh
          
          echo "::endgroup::"

      - name: Cache ccache
        uses: actions/cache@v4
        id: ccache-cache
        with:
          path: ${{ github.workspace }}/.ccache
          key: ${{ runner.os }}-ubuntu-24.04-ccache-x86_64-RelWithDebInfo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-ubuntu-24.04-ccache-x86_64-RelWithDebInfo-
            ${{ runner.os }}-ubuntu-24.04-ccache-x86_64-

      - name: Cache Build Dependencies
        uses: actions/cache@v4
        id: deps-cache
        with:
          path: |
            ${{ github.workspace }}/.deps
          key: ${{ runner.os }}-deps-${{ hashFiles('buildspec.json') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Cache OBS Studio SDK
        uses: actions/cache@v4
        id: obs-cache
        with:
          path: |
            /usr/include/obs
            /usr/lib/x86_64-linux-gnu/libobs*
            /usr/lib/obs-plugins
            /usr/share/obs
          key: ${{ runner.os }}-obs-31.1.1
          restore-keys: |
            ${{ runner.os }}-obs-

      - name: Run Initial Build
        env:
          CCACHE_DIR: ${{ github.workspace }}/.ccache
        run: |
          : Run Initial Build
          echo "::group::Build c64stream plugin"
          
          cd ${{ github.workspace }}
          .github/scripts/build-ubuntu --target ubuntu-x86_64 --config RelWithDebInfo
          
          echo "::endgroup::"

      - name: Verify Build Success
        run: |
          : Verify Build Success
          if [ -f "${{ github.workspace }}/build_x86_64/c64stream.so" ]; then
              echo "✅ Build successful"
              ls -lh ${{ github.workspace }}/build_x86_64/c64stream.so
          else
              echo "❌ Build failed"
              exit 1
          fi

      - name: Cache Build Directory
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/build_x86_64
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Display Cache Statistics
        run: |
          : Display Cache Statistics
          echo "::group::Cache Information"
          
          echo "ccache statistics:"
          if [ -d "${{ github.workspace }}/.ccache" ]; then
              du -sh ${{ github.workspace }}/.ccache
              if command -v ccache &> /dev/null; then
                  ccache -s || true
              fi
          else
              echo "ccache directory not found"
          fi
          
          echo ""
          echo "Build directory size:"
          if [ -d "${{ github.workspace }}/build_x86_64" ]; then
              du -sh ${{ github.workspace }}/build_x86_64
          else
              echo "Build directory not found"
          fi
          
          echo ""
          echo "Dependencies cache:"
          if [ -d "${{ github.workspace }}/.deps" ]; then
              du -sh ${{ github.workspace }}/.deps
          else
              echo "Dependencies cache not found"
          fi
          
          echo "::endgroup::"

      - name: Summary
        run: |
          : Summary
          echo "### Copilot Environment Setup Complete ✅" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The following caches have been created/updated:" >> $GITHUB_STEP_SUMMARY
          echo "- APT packages cache" >> $GITHUB_STEP_SUMMARY
          echo "- ccache (compiler cache)" >> $GITHUB_STEP_SUMMARY
          echo "- Build dependencies cache" >> $GITHUB_STEP_SUMMARY
          echo "- OBS Studio SDK cache" >> $GITHUB_STEP_SUMMARY
          echo "- Build directory cache" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Next Copilot Session Steps:**" >> $GITHUB_STEP_SUMMARY
          echo "1. Make your code changes" >> $GITHUB_STEP_SUMMARY
          echo "2. Format code: \`clang-format -style=file -i <files>\`" >> $GITHUB_STEP_SUMMARY
          echo "3. Incremental build: \`cd build_x86_64 && cmake --build .\`" >> $GITHUB_STEP_SUMMARY
          echo "4. Verify: \`ls -lh build_x86_64/c64stream.so\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "With caching, incremental builds should complete in ~10-30 seconds." >> $GITHUB_STEP_SUMMARY
